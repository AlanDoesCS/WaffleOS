- verify that only the needed .o files are linked (see -DPROFILE); provide
	a lightweight implementation of ``message'' (currently remapped on
	cprintf) that does not require linking libm

- profile and optimize the event management code

- rewrite cons.c isolating the parts making assumptions on memory spaces and
	improving efficency (window-based functions can be implemented
	separately)

- pentium timestamp conter code... Integrate it in timer code and event
	management
					Assigned to Gerardo

- provide some macro for int-based and call gate-based system calls

- begin to implement some serious code using OSLib:
	1) some simple multithreading executive based on cooperative and
		preemptive scheduling, message-based or based on shared
		memory and semaphores...
	2) some real small kernel, separating it from application code
	3) as 2), but with different address spaces for kernel and
		application
	...

- fix the eXtender in order to be fully multiboot compliant (no extension to
	the standard multiboot structure: we can use memory maps). Upgrade it
	to the latest version of the standard. Implement modules loading
