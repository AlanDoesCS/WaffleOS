1) Check save_fpu & c... It works, but the code is not very clean...
	Clean it.
   VERY LOW PRIORITY

2) Test the interrupt mechanism...	DONE
	Clean the act_int interface... (remove context? Like wake_up...)
		At least, look at it...
   MEDIUM PRIORITY

3) Time: clean up the time-exact code... Implement the Pentium timestamp
	code...
   MEDIUM PRIORITY

4) Interface:
	init(...)	look at the parameters
	event_post(time, handler, parameters)
		It returns a pointer to an event structure, allocated from
		a static array... Why not passing the pointer to an event
		structure (allocated by the user) as a parameter?
	irq_bind(irq, handler, flags)   OK.
	context_create(task, stack, arg, killer, ctrl)
		As for event_post... Why not passing a pointer to the 
		context as a parameter?
	context_delete(c)       OK.
	get_time()	Define something like TIME_HIGHRES, for the pentium
		timestamp...
	context_save()	OK.
	context_load(c)	OK.
	as_create()
		OK? 
	as_bind(as, ph_addr, l_addr, size)
		Interface is OK. It currently provides only half of the
		functionalities (no paging)...
   HIGH PRIORITY

5) More tests on ASs...
   HIGH PRIORITY

6) X: more MultiBoot compliance...
   MEDIUM PRIORITY

7) Provide a mechanism for system calls (invoked through interrupts?)

